// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// dummygd_
bool dummygd_();
RcppExport SEXP _httpgd_dummygd_() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(dummygd_());
    return rcpp_result_gen;
END_RCPP
}
// httpgd_
bool httpgd_(Rcpp::String host, int port, std::string bg, double width, double height, double pointsize, Rcpp::List aliases);
RcppExport SEXP _httpgd_httpgd_(SEXP hostSEXP, SEXP portSEXP, SEXP bgSEXP, SEXP widthSEXP, SEXP heightSEXP, SEXP pointsizeSEXP, SEXP aliasesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::String >::type host(hostSEXP);
    Rcpp::traits::input_parameter< int >::type port(portSEXP);
    Rcpp::traits::input_parameter< std::string >::type bg(bgSEXP);
    Rcpp::traits::input_parameter< double >::type width(widthSEXP);
    Rcpp::traits::input_parameter< double >::type height(heightSEXP);
    Rcpp::traits::input_parameter< double >::type pointsize(pointsizeSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type aliases(aliasesSEXP);
    rcpp_result_gen = Rcpp::wrap(httpgd_(host, port, bg, width, height, pointsize, aliases));
    return rcpp_result_gen;
END_RCPP
}
// httpgd_playDisplayList
void httpgd_playDisplayList();
RcppExport SEXP _httpgd_httpgd_playDisplayList() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    httpgd_playDisplayList();
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_httpgd_dummygd_", (DL_FUNC) &_httpgd_dummygd_, 0},
    {"_httpgd_httpgd_", (DL_FUNC) &_httpgd_httpgd_, 7},
    {"_httpgd_httpgd_playDisplayList", (DL_FUNC) &_httpgd_httpgd_playDisplayList, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_httpgd(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
